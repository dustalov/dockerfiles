name: Docker

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
  schedule:
  - cron: '30 1 1 * *'
  workflow_dispatch:

jobs:
  docker:
    strategy:
      matrix:
        image: [ cssnano, jekyll, netlify, purgecss, texlive ]
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v4
    - name: Set up QEMU
      uses: docker/setup-qemu-action@v3
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2
    - name: Create README.md
      run: awk 'BEGIN { print "# [Dockerfile.${{ matrix.image }}](${{ github.server_url }}/${{ github.repository }}/blob/${{ github.sha }}/Dockerfile.${{ matrix.image }})"; print; print "```dockerfile" } { print } END { print "```" }' Dockerfile.${{ matrix.image }} | sed -re 's/\s*<.*@.*>//' >README.md
    - name: Login to DockerHub
      if: github.event_name != 'pull_request'
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    - name: Login to GitHub Container Registry
      if: github.event_name != 'pull_request'
      uses: docker/login-action@v2
      with:
        registry: ghcr.io
        username: ${{ github.repository_owner }}
        password: ${{ secrets.GITHUB_TOKEN }}
    - name: Build and push
      uses: docker/build-push-action@v4
      with:
        context: .
        file: Dockerfile.${{ matrix.image }}
        platforms: linux/amd64,linux/arm64
        push: ${{ github.event_name != 'pull_request' }}
        tags: |
          dustalov/${{ matrix.image }}:latest
          ghcr.io/dustalov/${{ matrix.image }}:latest
    - name: Update Docker Hub description
      if: github.event_name != 'pull_request'
      uses: peter-evans/dockerhub-description@v3
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
        repository: dustalov/${{ matrix.image }}
        short-description: ${{ matrix.image }}
